name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      pypi_repository:
        description: 'PyPI repository (pypi or testpypi)'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi

jobs:
  publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    environment: release

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install -U pip poetry
          poetry --version

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false

      - name: Build package
        run: |
          poetry build

      - name: Check package
        run: |
          python -m pip install twine
          twine check dist/*

      - name: Publish to Test PyPI
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.pypi_repository == 'testpypi'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

#      - name: Publish to PyPI
#        if: (github.event_name == 'release' && github.event.action == 'published') || (github.event_name == 'workflow_dispatch' && github.event.inputs.pypi_repository == 'pypi')
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create deployment status
        if: success()
        run: |
          echo "Package successfully published to PyPI"
          echo "Install with: pip install sql-testing-library"
